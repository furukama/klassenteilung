window.partition=(()=>{"use strict";var t={249:(t,e,o)=>{function n(t){return function(t){let e,o;const n=t.nodes.length;for(o=0;o<n;o++)t.nodes[o].partition=o%2?"B":"A";console.log("Initial Cost",t.getPartitionCost());let i=0,r=0;for(;;){let n=[],s=[];t.nodes.forEach((function(t){"A"===t.partition?n.push(t):s.push(t)}));const d={};t.nodes.forEach((function(t){d[t.id]=t.getDValue()})),console.log(d);const f=[];for(o=0;o<Math.floor(t.nodes.length/2);o++){let t=-1/0,e=[];n.forEach((function(o){s.forEach((function(n){const i=o.edges.filter((function(t){return-1!==n.edges.indexOf(t)})).length,r=d[o.id]+d[n.id]-2*i;r>t&&(t=r,e=[o,n])}))}));const o=e[0],i=e[1];n=n.filter((function(t){return t!==o})),s=s.filter((function(t){return t!==i})),f.push([[o,i],t]),n.forEach((function(t){const e=t.edges.filter((function(t){return-1!==o.edges.indexOf(t)})).length,n=t.edges.filter((function(t){return-1!==i.edges.indexOf(t)})).length;d[t.id]+=2*e-2*n})),s.forEach((function(t){const e=t.edges.filter((function(t){return-1!==i.edges.indexOf(t)})).length,n=t.edges.filter((function(t){return-1!==o.edges.indexOf(t)})).length;d[t.id]+=2*e-2*n}))}let c=-1/0,h=0;for(let t=1;t<f.length+1;t++){let o=0;for(e=0;e<t;e++)o+=f[e][1];o>c&&(c=o,h=t)}if(!(c>0&&t.getPartitionCost()>0))break;for(e=0;e<h;e++)t.nodes.forEach((function(t){t.id===f[e][0][0].id?t.partition="B":t.id===f[e][0][1].id&&(t.partition="A")}));i+=1,r+=c}return t}(function(t){const e=[],o=[],n=[];return t.forEach((function(t){-1===n.indexOf(t[0])&&(o.push(new i(t[0])),n.push(t[0])),t[1].forEach((function(s){-1===n.indexOf(s)&&(o.push(new i(s)),n.push(s)),e.push(new r(t[0],s))}))})),new s(o,e)}(t))}o.d(e,{default:()=>n});class i{constructor(t){this.id=t,this.edges=[]}getDValue(){let t=0;const e=this;let o=null;return this.edges.forEach((function(n){n.from===e.id?o=n.toNode:n.to===e.id&&(o=n.fromNode),o.partition!==e.partition?t+=1:t-=1})),t}addEdge(t){for(let e=0;e<this.edges.length;e+=1)if(this.edges[e].from===t.from&&this.edges[e].to===t.to)return;this.edges.push(t)}}class r{constructor(t,e){this.from=t,this.to=e}}class s{constructor(t,e){this.nodes=t,this.edges=e;const o={};this.nodes.forEach((function(t){o[t.id]=t}));for(let t=0;t<this.edges.length;t++)this.edges[t].fromNode=o[this.edges[t].from],o[this.edges[t].from].addEdge(this.edges[t]),this.edges[t].toNode=o[this.edges[t].to],o[this.edges[t].to].addEdge(this.edges[t])}getPartitionCost(){let t=0;for(let e=0;e<this.edges.length;e++)this.edges[e].fromNode.partition!==this.edges[e].toNode.partition&&(t+=1);return t}}}},e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={exports:{}};return t[n](i,i.exports,o),i.exports}return o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o(249)})().default;